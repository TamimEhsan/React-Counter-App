{"version":3,"sources":["components/navbar.jsx","logo.svg","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","this","props","totalCounters","Component","Counter","styles","fontSize","fontWeight","Fragment","style","getBadgeClasses","formatCount","onClick","onIncreament","counter","onDelete","id","classes","value","Counters","onReset","counters","map","App","state","handleReset","console","log","c","setState","handleIncreament","index","indexOf","handleDelete","counterId","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+PAkBeA,GClBA,I,6KDOP,OACI,qBAAKC,UAAU,+BAAf,SACI,oBAAGA,UAAU,eAAb,mBAEI,sBAAMA,UAAU,uCAAhB,SAAyDC,KAAKC,MAAMC,yB,GANnEC,cE+BNC,E,4MAjCXC,OAAS,CACLC,SAAU,GACVC,WAAW,Q,uDAGL,IAAD,OAEL,OACI,eAAC,IAAMC,SAAP,WACI,sBAAMC,MAAST,KAAKK,OAAQN,UAAWC,KAAKU,kBAA5C,SAAgEV,KAAKW,gBACrE,wBACIC,QAAS,kBAAI,EAAKX,MAAMY,aAAa,EAAKZ,MAAMa,UAChDf,UAAU,2BAFd,wBAGA,wBAAQA,UAAU,qBAAqBa,QAAS,kBAAI,EAAKX,MAAMc,SAAS,EAAKd,MAAMa,QAAQE,KAA3F,qBACA,4B,wCAQR,IAAIC,EAAU,aAEd,OADAA,GAAyC,IAA7BjB,KAAKC,MAAMa,QAAQI,MAAe,gBAAkB,kB,oCAItD,IACFA,EAAUlB,KAAKC,MAAMa,QAArBI,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GA9BhBf,aCqBPgB,E,uKAlBF,MAEiDnB,KAAKC,MAAnDmB,EAFH,EAEGA,QAASL,EAFZ,EAEYA,SAAUF,EAFtB,EAEsBA,aAFtB,EAEoCQ,SACzC,OACI,gCACI,wBAAST,QAASQ,EAASrB,UAAU,kBAArC,mBADJ,IAC0E,uBACpEC,KAAKC,MAAMoB,SAASC,KAAK,SAAAR,GAAO,OAC9B,cAAC,EAAD,CAEID,aAAgBA,EAChBE,SAAYA,EACZD,QAAWA,GAHNA,EAAQE,c,GAVdb,aCmDRoB,E,4MA/CXC,MAAQ,CACJH,SAAS,CACL,CAACL,GAAG,EAAGE,MAAO,GACd,CAACF,GAAG,EAAGE,MAAO,GACd,CAACF,GAAG,EAAGE,MAAO,GACd,CAACF,GAAG,EAAGE,MAAO,K,EAGtBO,YAAc,WACVC,QAAQC,IAAI,gBACZ,IAAMN,EAAW,EAAKG,MAAMH,SAASC,KAAK,SAAAM,GAEtC,OADAA,EAAEV,MAAQ,EACHU,KAEX,EAAKC,SAAS,CAACR,c,EAGnBS,iBAAmB,SAAAhB,GACf,IAAMO,EAAQ,YAAO,EAAKG,MAAMH,UAC1BU,EAAQV,EAASW,QAAQlB,GAC/BO,EAASU,GAAT,eAAsBjB,GACtBO,EAASU,GAAOb,QAChB,EAAKW,SAAS,CAACR,c,EAGnBY,aAAe,SAACC,GACZ,IAAMb,EAAW,EAAKG,MAAMH,SAASc,QAAQ,SAAAP,GAAC,OAAIA,EAAEZ,KAAMkB,KAC1D,EAAKL,SAAS,CAACR,c,uDAIf,OACI,eAAC,IAAMb,SAAP,WACI,cAAC,EAAD,CAAQN,cAAeF,KAAKwB,MAAMH,SAASc,QAAO,SAAAP,GAAC,OAAIA,EAAEV,MAAQ,KAAGkB,SACpE,sBAAMrC,UAAU,YAAhB,SACI,cAAC,EAAD,CACIsB,SAAYrB,KAAKwB,MAAMH,SACvBD,QAAWpB,KAAKyB,YAChBZ,aAAgBb,KAAK8B,iBACrBf,SAAYf,KAAKiC,wB,GAzCvB9B,aCOHkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.49ab2700.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\n//stateless Functional Component\r\n\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <a className=\"navbar-brand\" >\r\n                    Navbar\r\n                    <span className=\"badge badge-pill badge-secondary m-2\" >{this.props.totalCounters}</span>\r\n                </a>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, {Component} from 'react';\r\n\r\nclass Counter extends Component {\r\n    styles = {\r\n        fontSize: 20,\r\n        fontWeight:\"bold\"\r\n    }\r\n\r\n    render() {\r\n        //console.log('props',this.props);\r\n        return (\r\n            <React.Fragment>\r\n                <span style = {this.styles} className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button\r\n                    onClick={()=>this.props.onIncreament(this.props.counter)}\r\n                    className=\"btn btn-secondary btn-sm\">Increament</button>\r\n                <button className=\"btn btn-danger m-2\" onClick={()=>this.props.onDelete(this.props.counter.id)}> Delete</button>\r\n                <br />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 \";\r\n        classes += (this.props.counter.value === 0) ? \"badge-warning\" : \"badge-primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const { value } = this.props.counter;\r\n        return value === 0 ? \"Zero\" : value;\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, {Component} from 'react';\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n\r\n    render() {\r\n        // object destructuring\r\n        const { onReset, onDelete, onIncreament, counters } = this.props;\r\n        return (\r\n            <div>\r\n                <button  onClick={onReset} className=\"btn btn-warning\">Reset</button> <br />\r\n                { this.props.counters.map( counter =>\r\n                    <Counter\r\n                        key={counter.id}\r\n                        onIncreament = {onIncreament}\r\n                        onDelete = {onDelete}\r\n                        counter = {counter}/> ) }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Counters;","import logo from './logo.svg';\nimport React, {Component} from 'react';\nimport './App.css';\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nclass App extends Component {\n\n    state = {\n        counters:[\n            {id:1, value: 2},\n            {id:2, value: 0},\n            {id:3, value: 0},\n            {id:4, value: 0}\n        ]\n    }\n    handleReset = () =>{\n        console.log(\"deletesdfsdf\");\n        const counters = this.state.counters.map( c =>{\n            c.value = 0;\n            return c;\n        });\n        this.setState({counters});\n    }\n\n    handleIncreament = counter =>{\n        const counters = [...this.state.counters];\n        const index = counters.indexOf(counter);\n        counters[index] = {...counter};\n        counters[index].value++;\n        this.setState({counters});\n    }\n\n    handleDelete = (counterId)=>{\n        const counters = this.state.counters.filter( c => c.id!== counterId);\n        this.setState({counters});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <NavBar totalCounters={this.state.counters.filter(c => c.value > 0).length}/>\n                <main className=\"container\">\n                    <Counters\n                        counters = {this.state.counters}\n                        onReset = {this.handleReset}\n                        onIncreament = {this.handleIncreament}\n                        onDelete = {this.handleDelete}\n                    />\n                </main>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counters from \"./components/counters\";\n\nReactDOM.render(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}