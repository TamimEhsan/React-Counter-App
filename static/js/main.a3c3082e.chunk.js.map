{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/counter.jsx","components/counters.jsx","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","value","props","tags","styles","fontSize","fontWeight","handleIncreament","setState","Fragment","style","this","className","getBadgeClasses","formatCount","onClick","length","map","tag","classes","Component","Counters","counters","id","counter","selected","ReactDOM","render","document","getElementById"],"mappings":"mNAAe,I,MCwBAA,ICZAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oCCgDCQ,E,4MApDXC,MAAQ,CACJC,MAAM,EAAKC,MAAMD,MACjBE,KAAM,CAAC,OAAO,OAAO,S,EAOzBC,OAAS,CACLC,SAAU,GACVC,WAAW,Q,EAefC,iBAAmB,WACf,EAAKC,SAAS,CAACP,MAAM,EAAKD,MAAMC,MAAM,K,uDAXtC,OACI,eAAC,IAAMQ,SAAP,WACI,sBAAMC,MAASC,KAAKP,OAAQQ,UAAWD,KAAKE,kBAA5C,SAAgEF,KAAKG,gBACrE,wBAAQC,QAASJ,KAAKJ,iBAAkBK,UAAU,2BAAlD,wBACA,wBAAQA,UAAU,qBAAlB,qBACA,4B,mCASR,OAA+B,IAA3BD,KAAKX,MAAMG,KAAKa,OACT,mDAGH,oBAAIJ,UAAU,sCAAd,SACKD,KAAKX,MAAMG,KAAKc,KAAI,SAAAC,GAAG,OAAI,oBAAKN,UAAU,kBAAf,SAA4CM,GAANA,U,wCAM9E,IAAIC,EAAU,aAEd,OADAA,GAAiC,IAArBR,KAAKX,MAAMC,MAAe,gBAAkB,kB,oCAI9C,IACFA,EAAUU,KAAKX,MAAfC,MACR,OAAiB,IAAVA,EAAc,OAASA,M,GAjDhBmB,aCoBPC,E,4MAlBXrB,MAAQ,CACJsB,SAAS,CACL,CAACC,GAAG,EAAGtB,MAAO,GACd,CAACsB,GAAG,EAAGtB,MAAO,GACd,CAACsB,GAAG,EAAGtB,MAAO,GACd,CAACsB,GAAG,EAAGtB,MAAO,K,uDAIlB,OACI,8BACMU,KAAKX,MAAMsB,SAASL,KAAK,SAAAO,GAAO,OAC9B,cAAC,EAAD,CAA0BvB,MAASuB,EAAQvB,MAAOwB,UAAU,GAA9CD,EAAQD,a,GAbnBH,aCKvBM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BvC,M","file":"static/js/main.a3c3082e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {Component} from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        value:this.props.value,\r\n        tags: ['tag1','tag2','tag3']\r\n    };\r\n   /* constructor() {\r\n        super();\r\n        this.handleIncreament = this.handleIncreament.bind(this);\r\n    }\r\n    */\r\n    styles = {\r\n        fontSize: 20,\r\n        fontWeight:\"bold\"\r\n    }\r\n\r\n    render() {\r\n        //console.log('props',this.props);\r\n        return (\r\n            <React.Fragment>\r\n                <span style = {this.styles} className={this.getBadgeClasses()}>{this.formatCount()}</span>\r\n                <button onClick={this.handleIncreament} className=\"btn btn-secondary btn-sm\">Increament</button>\r\n                <button className=\"btn btn-danger m-2\"> Delete</button>\r\n                <br />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    handleIncreament = () => {\r\n        this.setState({value:this.state.value+1});\r\n    }\r\n    renderTags(){\r\n        if( this.state.tags.length === 0 ){\r\n            return <p>There are no tags!</p>;\r\n        } else{\r\n            return (\r\n                <ul className=\"list-group list-group-horizontal-md\">\r\n                    {this.state.tags.map(tag => <li  className=\"list-group-item\" key={tag}>{tag}</li>)}\r\n                </ul>\r\n            );\r\n        }\r\n    }\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 \";\r\n        classes += (this.state.value === 0) ? \"badge-warning\" : \"badge-primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount(){\r\n        const { value } = this.state;\r\n        return value === 0 ? \"Zero\" : value;\r\n    }\r\n}\r\n\r\nexport default Counter;","import React, {Component} from 'react';\r\nimport Counter from \"./counter\";\r\n\r\nclass Counters extends Component {\r\n    state = {\r\n        counters:[\r\n            {id:1, value: 2},\r\n            {id:2, value: 0},\r\n            {id:3, value: 0},\r\n            {id:4, value: 0}\r\n        ]\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                { this.state.counters.map( counter =>\r\n                    <Counter key={counter.id} value = {counter.value} selected={true}/> ) }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counters;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counters from \"./components/counters\";\n\nReactDOM.render(\n  <Counters/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}